<!doctype html>
<html lang="id">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>C44.ai – Terus Bertahan</title>
<style>
  body {
    margin:0;
    background:#0b0b0d;
    font-family:'Arial', sans-serif;
    color:#fff;
    overflow:hidden;
    display:flex;
    justify-content:center;
    align-items:center;
    height:100vh;
  }
  /* Intro, Quotes, Slideshow */
  #intro, #quotes, #slideshow {
    position:fixed;
    inset:0;
    display:flex;
    justify-content:center;
    align-items:center;
    background:#0b0b0d;
    transition:opacity 1s ease;
    flex-direction:column;
  }
  #intro h1 { font-size:2em; font-style:italic; }
  #quotes { 
    font-size:1.5em; 
    text-align:center; 
    opacity:0;
    padding:0 20px;
  }
  #slideshow { display:none; flex-direction:column; }
  .slide {
    position:absolute;
    inset:0;
    width:100%;
    height:100%;
    object-fit:cover;
    opacity:0;
    transition:opacity 1s ease-in-out;
  }
  .slide.active {opacity:1;}
  .overlay {
    position:absolute;
    inset:0;
    background:linear-gradient(180deg,rgba(0,0,0,0.2),rgba(0,0,0,0.7));
    z-index:1;
  }
  .lyrics {
    text-align:center;
    font-size:calc(16px + 1vw);
    line-height:1.5;
    z-index:2;
    color:#f5f5f5;
    font-style:italic;
    padding:0 20px;
  }
  .audio-player {
    position:absolute;
    bottom:20px;
    left:50%;
    transform:translateX(-50%);
    z-index:3;
  }
  .audio-player button {
    background: rgba(255,255,255,0.2);
    border:none;
    border-radius:50%;
    width:50px;
    height:50px;
    font-size:24px;
    color:#fff;
    cursor:pointer;
    transition:0.3s;
  }
  .audio-player button:hover { background: rgba(255,255,255,0.4); }

  /* Cursor blinking effect */
  .cursor {
    display: inline-block;
    width: 2px;
    height: 1em;
    background-color: white;
    margin-left: 2px;
    animation: blink 1s infinite;
    vertical-align: middle;
  }
  @keyframes blink { 0%,50%{opacity:1;} 51%,100%{opacity:0;} }
</style>
</head>
<body>

<!-- Intro -->
<div id="intro">
  <h1>C44.ai – Terus Bertahan</h1>
</div>

<!-- Quotes -->
<div id="quotes">
  <div id="quoteText"></div>
</div>

<!-- Slideshow + Lyrics -->
<div class="phone" id="slideshow">
  <div class="overlay"></div>
  <div class="lyrics" id="lyric"></div>
  <div class="audio-player">
    <button id="playBtn">▶️</button>
  </div>
</div>

<audio id="audio" src="lagu.mp3"></audio>

<script>
  // === Audio context for typewriter clicks ===
  let audioContext = new (window.AudioContext || window.webkitAudioContext)();
  let typeSoundBuffer;

  async function generateTypeSound() {
    const duration = 0.03;
    const sampleRate = audioContext.sampleRate;
    const frameCount = Math.floor(duration*sampleRate);
    const buffer = audioContext.createBuffer(1, frameCount, sampleRate);
    const data = buffer.getChannelData(0);
    for(let i=0;i<frameCount;i++){
      const t=i/sampleRate;
      data[i]=Math.random()*0.4*Math.exp(-t*100);
    }
    typeSoundBuffer=buffer;
  }
  generateTypeSound();

  function playTypeSound(){
    if(!typeSoundBuffer) return;
    const source=audioContext.createBufferSource();
    source.buffer=typeSoundBuffer;
    source.connect(audioContext.destination);
    source.start();
    source.onended=()=>{ source.disconnect(); };
  }

  // === Quotes Array ===
  const quotes = [
    "“Meski banyak yang menjatuhkan, langkahku tak akan berhenti.”",
    "“Sekecil apapun rezeki, tetap jadi alasan untuk bersyukur.”",
    "“Mereka boleh menghina, tapi aku terus berdiri.”",
    "“Tuhan selalu dengar, bahkan saat dunia menutup mata.”",
    "“Ada cinta dan doa yang cukup jadi bahan bakar untukku bertahan.”",
    "“Badai bisa menghantam, tapi nyalaku takkan padam.”",
    "“Selama masih ada harapan, aku takkan runtuh.”"
  ];
  let qIndex = 0;
  const quoteBox = document.getElementById("quoteText");

  // === Slideshow Images (5) ===
  const images = [
    "gambar1.jpg",
    "gambar2.jpg",
    "gambar3.jpg",
    "gambar4.jpg",
    "gambar5.jpg"
  ];
  const slideshow = document.getElementById("slideshow");
  let current = 0;
  let slides = [];
  images.forEach((src,i)=>{
    const img = document.createElement("img");
    img.src = src;
    img.classList.add("slide");
    if(i===0) img.classList.add("active");
    slideshow.appendChild(img);
    slides.push(img);
  });

  // === Audio Player ===
  const audio = document.getElementById("audio");
  const playBtn = document.getElementById("playBtn");
  playBtn.addEventListener("click",()=>{
    if(audio.paused){ audio.play(); playBtn.textContent="⏸️"; }
    else { audio.pause(); playBtn.textContent="▶️"; }
  });

  // === Flow: Intro -> Quotes -> Slideshow ===
  setTimeout(()=>{
    document.getElementById("intro").style.opacity=0;
    setTimeout(()=>{
      document.getElementById("intro").style.display="none";
      showQuotes();
    },1000);
  },4000);

  function showQuotes(){
    document.getElementById("quotes").style.opacity = 1;
    qIndex = 0;
    typeNextQuote();
  }

  function typeNextQuote(){
    if(qIndex >= quotes.length){
      document.getElementById("quotes").style.opacity = 0;
      setTimeout(()=>{
        document.getElementById("quotes").style.display="none";
        slideshow.style.display="flex";
        startSlideshow();
        syncLyrics();
      },1000);
      return;
    }
    
    typeWriter(quotes[qIndex], 0, () => {
      quoteBox.innerHTML += '<span class="cursor"></span>';
      setTimeout(() => {
        qIndex++;
        quoteBox.innerHTML = '';
        typeNextQuote();
      }, 2000);
    });
  }

  function typeWriter(text, i, callback){
    if(i === 0) { quoteBox.innerHTML = ''; }
    if(i < text.length){
      const currentText = text.substring(0, i + 1);
      quoteBox.innerHTML = currentText + '<span class="cursor"></span>';
      const char = text.charAt(i);
      if(char !== ' ' && char !== '“' && char !== '”') playTypeSound();
      let delay = 50;
      if(char===' ') delay=20;
      if(char==='“'||char==='”'||char==='.') delay=100;
      setTimeout(()=>{ typeWriter(text, i+1, callback); }, delay);
    } else { callback(); }
  }

  // === Lyrics Sync via LRC ===
  let lyricData = [];
  async function loadLyrics(url){
    const res = await fetch(url);
    const text = await res.text();
    const lines = text.split('\n');
    const data = lines.map(line=>{
      const match = line.match(/\[(\d+):(\d+\.\d+)\](.*)/);
      if(match){
        const minutes = parseInt(match[1]);
        const seconds = parseFloat(match[2]);
        return { start: minutes*60+seconds, text: match[3].trim() };
      }
    }).filter(Boolean);
    for(let i=0;i<data.length-1;i++){ data[i].end = data[i+1].start; }
    data[data.length-1].end = audio.duration || 9999;
    return data;
  }

  async function syncLyrics(){
    lyricData = await loadLyrics('lagu.lrc');
    requestAnimationFrame(updateLyrics);
  }

  function updateLyrics(){
    const currentTime = audio.currentTime;
    const line = lyricData.find(l => currentTime>=l.start && currentTime<=l.end);
    document.getElementById("lyric").innerHTML = line ? line.text : '';
    requestAnimationFrame(updateLyrics);
  }

  // === Slideshow berganti tiap 5 detik ===
  function startSlideshow(){
    setInterval(()=>{
      slides[current].classList.remove("active");
      current=(current+1)%slides.length;
      slides[current].classList.add("active");
    },5000);
  }

</script>
</body>
</html>